#!/bin/bash
# Mailcow backup cleanup script
# Generated by Ansible

set -e

BACKUP_DIR="{{ mailcow_backup_dir }}"
RETENTION="{{ mailcow_backup_retention }}"

echo "Starting backup cleanup at $(date)"
echo "Retention policy: Keep latest $RETENTION backups"

# Count total backups
TOTAL_BACKUPS=$(find "$BACKUP_DIR" -name "mailcow-backup-*.tar.gz" | wc -l)
echo "Total backups found: $TOTAL_BACKUPS"

# Calculate how many to delete
if [ "$TOTAL_BACKUPS" -le "$RETENTION" ]; then
  echo "Number of backups ($TOTAL_BACKUPS) is less than or equal to retention policy ($RETENTION). Nothing to delete."
  exit 0
fi

TO_DELETE=$((TOTAL_BACKUPS - RETENTION))
echo "Will delete oldest $TO_DELETE backup(s)"

# List backups sorted by modification time (oldest first)
BACKUPS_TO_DELETE=$(find "$BACKUP_DIR" -name "mailcow-backup-*.tar.gz" -type f -printf "%T@ %p\n" | sort | head -n "$TO_DELETE" | awk '{print $2}')

# Delete old backups
for BACKUP in $BACKUPS_TO_DELETE; do
  echo "Deleting $BACKUP"
  rm -f "$BACKUP"
done

echo "Cleanup completed at $(date)"