#!/bin/bash
# Script to fix Dovecot FTS issues in Mailcow
# Generated by Ansible

set -e

# Wait for container to be created but before it fully starts
echo "Waiting for dovecot container to be created..."
sleep 5

# Get the container ID
CONTAINER_ID=$(docker ps -a | grep dovecot-mailcow | head -n1 | awk '{print $1}')
if [ -z "$CONTAINER_ID" ]; then
  echo "Error: Could not find dovecot container"
  exit 1
fi
echo "Found dovecot container: $CONTAINER_ID"

# Direct fix approach: Patching the container's init scripts
echo "Patching the container's initialization scripts..."

docker exec $CONTAINER_ID bash -c '
  # Create a backup of the original script
  cp /docker-entrypoint.sh /docker-entrypoint.sh.original

  # Replace problematic sed command with a safer version
  sed -i "s/sed -i -e \"s|^mail_plugins.*|mail_plugins =/sed -i -e \"s|^mail_plugins.*|mail_plugins = /" /docker-entrypoint.sh

  # Set environment variables to skip FTS
  echo "export SKIP_FTS=y" >> /etc/environment
  echo "export SKIP_SOLR=y" >> /etc/environment

  # Create a wrapper for the sed command that will safely exit
  echo "#!/bin/bash" > /usr/local/bin/safe-sed
  echo "# Wrapper to prevent fatal sed errors" >> /usr/local/bin/safe-sed
  echo "sed \"\$@\" || true" >> /usr/local/bin/safe-sed
  chmod +x /usr/local/bin/safe-sed

  # Create a symlink to override the system sed with our safe version
  if [ -f /usr/bin/sed.original ]; then
    rm -f /usr/bin/sed.original
  fi
  cp /usr/bin/sed /usr/bin/sed.original
  ln -sf /usr/local/bin/safe-sed /usr/bin/sed
'

echo "Container has been patched successfully."
echo "Restarting dovecot container..."

docker restart $CONTAINER_ID

echo "Fix completed."