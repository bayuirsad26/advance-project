#!/bin/bash
# Mailcow backup script
# Generated by Ansible

set -e

# Configuration
BACKUP_DIR="{{ mailcow_backup_dir }}"
MAILCOW_DIR="{{ mailcow_dest }}"
TIMESTAMP=$(date +%Y%m%d-%H%M%S)
BACKUP_NAME="mailcow-backup-$TIMESTAMP"
BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"

# Create backup directory
mkdir -p "$BACKUP_PATH"

echo "Starting Mailcow backup at $(date)"
echo "Backup directory: $BACKUP_PATH"

# Backup configuration files
echo "Backing up configuration files..."
mkdir -p "$BACKUP_PATH/conf"
cp -r "$MAILCOW_DIR/data/conf" "$BACKUP_PATH/"
cp "$MAILCOW_DIR/.env" "$BACKUP_PATH/"
cp "$MAILCOW_DIR/docker-compose.yml" "$BACKUP_PATH/"
cp "$MAILCOW_DIR/docker-compose.override.yml" "$BACKUP_PATH/" 2>/dev/null || true

# Backup SSL certificates
echo "Backing up SSL certificates..."
mkdir -p "$BACKUP_PATH/ssl"
cp -r "$MAILCOW_DIR/data/assets/ssl" "$BACKUP_PATH/"

# Backup Redis data
echo "Backing up Redis data..."
docker exec $(docker ps -qf name=redis-mailcow) redis-cli save
mkdir -p "$BACKUP_PATH/redis"
cp -r "$MAILCOW_DIR/data/redis" "$BACKUP_PATH/"

# Backup MySQL database
echo "Backing up MySQL database..."
MYSQL_CONTAINER=$(docker ps -qf name=mysql-mailcow)
docker exec $MYSQL_CONTAINER sh -c 'exec mysqldump -uroot -p"$MYSQL_ROOT_PASSWORD" --all-databases' > "$BACKUP_PATH/mailcow_database.sql"

# Backup vmail directory (if not too large)
if [ -d "$MAILCOW_DIR/data/vmail" ]; then
  echo "Checking vmail directory size..."
  VMAIL_SIZE=$(du -sb "$MAILCOW_DIR/data/vmail" | awk '{print $1}')
  VMAIL_SIZE_GB=$(echo "scale=2; $VMAIL_SIZE / 1024 / 1024 / 1024" | bc)
  
  if (( $(echo "$VMAIL_SIZE_GB < 10" | bc -l) )); then
    echo "Backing up vmail directory ($VMAIL_SIZE_GB GB)..."
    mkdir -p "$BACKUP_PATH/vmail"
    cp -r "$MAILCOW_DIR/data/vmail" "$BACKUP_PATH/"
  else
    echo "Vmail directory too large ($VMAIL_SIZE_GB GB), skipping. Consider using rsync for incremental backups."
  fi
fi

# Create compressed archive
echo "Creating compressed archive..."
cd "$BACKUP_DIR"
tar -czf "$BACKUP_NAME.tar.gz" "$BACKUP_NAME"
rm -rf "$BACKUP_NAME"

echo "Backup completed at $(date)"
echo "Backup file: $BACKUP_DIR/$BACKUP_NAME.tar.gz"