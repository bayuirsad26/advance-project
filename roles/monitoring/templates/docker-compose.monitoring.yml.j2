services:
  prometheus:
    image: prom/prometheus:{{ monitoring_prometheus_version }}
    container_name: prometheus
    volumes:
      - {{ monitoring_prometheus_config_dir }}:/etc/prometheus
      - {{ monitoring_prometheus_data_dir }}:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time={{ monitoring_prometheus_retention }}"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    networks:
      - monitoring-network
      - {{ traefik_public_network }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.{{ monitoring_domain }}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
      - "traefik.http.middlewares.prometheus-auth.basicauth.users={{ monitoring_prometheus_auth }}"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    user: "{{ monitoring_prometheus_user }}:{{ monitoring_prometheus_group }}"

  node-exporter:
    image: prom/node-exporter:{{ monitoring_node_exporter_version }}
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker)($$|/)"
    restart: unless-stopped
    networks:
      - monitoring-network
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:{{ monitoring_cadvisor_version }}
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - monitoring-network
    expose:
      - 8080

  grafana:
    image: grafana/grafana:{{ monitoring_grafana_version }}
    container_name: grafana
    volumes:
      - {{ monitoring_grafana_data_dir }}:/var/lib/grafana
      - {{ monitoring_grafana_config_dir }}/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ monitoring_grafana_admin_password }}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.{{ monitoring_domain }}
      - GF_SMTP_ENABLED={{ monitoring_grafana_smtp_enabled }}
      {% if monitoring_grafana_smtp_enabled == 'true' %}
      - GF_SMTP_HOST={{ monitoring_smtp_smarthost }}
      - GF_SMTP_USER={{ monitoring_smtp_username }}
      - GF_SMTP_PASSWORD={{ monitoring_smtp_password }}
      - GF_SMTP_FROM_ADDRESS={{ monitoring_smtp_from }}
      {% endif %}
    restart: unless-stopped
    networks:
      - monitoring-network
      - {{ traefik_public_network }}
    depends_on:
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{ monitoring_domain }}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    user: "{{ monitoring_grafana_user }}:{{ monitoring_grafana_group }}"

  alertmanager:
    image: prom/alertmanager:{{ monitoring_alertmanager_version }}
    container_name: alertmanager
    volumes:
      - {{ monitoring_alertmanager_config_dir }}:/etc/alertmanager
      - {{ monitoring_alertmanager_data_dir }}:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    restart: unless-stopped
    networks:
      - monitoring-network
      - {{ traefik_public_network }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.{{ monitoring_domain }}`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls.certresolver=myresolver"
      - "traefik.http.routers.alertmanager.middlewares=alertmanager-auth"
      - "traefik.http.middlewares.alertmanager-auth.basicauth.users={{ monitoring_alertmanager_auth }}"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
    user: "{{ monitoring_alertmanager_user }}:{{ monitoring_alertmanager_group }}"

networks:
  monitoring-network:
    driver: bridge
  {{ traefik_public_network }}:
    external: true