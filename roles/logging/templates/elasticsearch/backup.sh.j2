#!/bin/bash
# Elasticsearch snapshot backup script
# Generated by Ansible

set -e

BACKUP_NAME="elasticsearch-backup-$(date +%Y%m%d-%H%M%S)"
ELASTIC_USER="{{ logging_elastic_user }}"
ELASTIC_PASS="{{ logging_elastic_password }}"
ELASTIC_URL="http://localhost:{{ logging_elasticsearch_port }}"

echo "Starting Elasticsearch backup at $(date)"

# Register the backup repository if it doesn't exist
REPO_CHECK=$(curl -s -u $ELASTIC_USER:$ELASTIC_PASS $ELASTIC_URL/_snapshot/backup -o /dev/null -w "%{http_code}")

if [ "$REPO_CHECK" != "200" ]; then
  echo "Registering backup repository..."
  curl -XPUT -u $ELASTIC_USER:$ELASTIC_PASS "$ELASTIC_URL/_snapshot/backup" -H 'Content-Type: application/json' -d'
  {
    "type": "fs",
    "settings": {
      "location": "/usr/share/elasticsearch/backup",
      "compress": true
    }
  }
  '
fi

# Create a new snapshot
echo "Creating snapshot $BACKUP_NAME..."
curl -XPUT -u $ELASTIC_USER:$ELASTIC_PASS "$ELASTIC_URL/_snapshot/backup/$BACKUP_NAME?wait=true" -H 'Content-Type: application/json' -d'
{
  "indices": "*",
  "ignore_unavailable": true,
  "include_global_state": true
}
'

# List all snapshots
echo "Available snapshots:"
curl -s -u $ELASTIC_USER:$ELASTIC_PASS "$ELASTIC_URL/_snapshot/backup/_all" | grep snapshot | sort

# Clean up old snapshots (keep last 7)
echo "Checking for old snapshots to clean up..."
SNAPSHOTS=$(curl -s -u $ELASTIC_USER:$ELASTIC_PASS "$ELASTIC_URL/_snapshot/backup/_all" | grep -o '"snapshot":"[^"]*"' | sed 's/"snapshot":"//g' | sed 's/"//g' | sort)
COUNT=$(echo "$SNAPSHOTS" | wc -l)

if [ "$COUNT" -gt 7 ]; then
  DELETE_COUNT=$((COUNT - 7))
  echo "Deleting oldest $DELETE_COUNT snapshots..."
  
  for SNAPSHOT in $(echo "$SNAPSHOTS" | head -n $DELETE_COUNT); do
    echo "Deleting snapshot $SNAPSHOT..."
    curl -XDELETE -u $ELASTIC_USER:$ELASTIC_PASS "$ELASTIC_URL/_snapshot/backup/$SNAPSHOT"
  done
else
  echo "No need to clean up snapshots (total: $COUNT)"
fi

echo "Backup completed at $(date)"